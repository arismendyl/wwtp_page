{"ast":null,"code":"var _jsxFileName = \"/home/arismendyl/Documents/WWTP page/wwtp/client/src/components/Charts/seeds.js\";\nimport React from 'react';\nimport AChart from \"react-apexcharts\";\n\nconst op = (id, name, date) => {\n  let colors = ['#f8e9a1', '#f76c6c', '#a8d0e6', '#374785', '#24305e', '#339933', '#375e97', '#fb6542', '#ffbb00', '#f0f0f0', '#004c97', '#ff9e15', '#a5cd50', '#2dbecd', '#e61e50', '#fbae00', '#da5353', '#693f7b', '#39589a', '#338984'];\n  let text_id = 'chart-'.concat(id);\n  return {\n    colors: [colors[id]],\n    chart: {\n      id: text_id,\n      type: 'area',\n      group: 'social',\n      stacked: false,\n      height: '100%',\n      width: \"100%\",\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        },\n        initialAnimation: {\n          enabled: true\n        }\n      },\n      zoom: {\n        type: 'x',\n        enabled: true,\n        autoScaleYaxis: true\n      },\n      toolbar: {\n        autoSelected: 'zoom'\n      }\n    },\n    markers: {\n      size: 0\n    },\n    xaxis: {\n      categories: date,\n      type: \"datetime\",\n      labels: {\n        datetimeFormatter: {\n          year: 'yyyy',\n          month: 'MMM \\'yy',\n          day: 'dd MMM',\n          hour: 'HH:mm'\n        }\n      }\n    },\n    fill: {\n      colors: [colors[id]],\n      opacity: 0.9,\n      type: 'solid',\n      gradient: {\n        shade: 'dark',\n        type: \"horizontal\",\n        shadeIntensity: 0.5,\n        gradientToColors: undefined,\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 50, 100],\n        colorStops: []\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    title: {\n      text: name,\n      align: \"center\",\n      margin: 20,\n      offsetY: 20,\n      style: {\n        fontSize: \"25px\"\n      }\n    },\n    yaxis: {\n      labels: {\n        minWidth: 40\n      }\n    }\n  };\n};\n\nconst Seeds = ({\n  todos,\n  date\n}) => {\n  const todoList = todos.length ? todos.map((todo, index) => {\n    let option = index;\n    let name = todo.name;\n    let parameters = op(option, name, date);\n    console.log(parameters);\n    return React.createElement(\"div\", {\n      className: \"col s6\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(AChart, {\n      options: parameters,\n      series: [todo],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }) : React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Loading\");\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, todoList));\n};\n\nexport default Seeds;","map":{"version":3,"sources":["/home/arismendyl/Documents/WWTP page/wwtp/client/src/components/Charts/seeds.js"],"names":["React","AChart","op","id","name","date","colors","text_id","concat","chart","type","group","stacked","height","width","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","initialAnimation","zoom","autoScaleYaxis","toolbar","autoSelected","markers","size","xaxis","categories","labels","datetimeFormatter","year","month","day","hour","fill","opacity","gradient","shade","shadeIntensity","gradientToColors","undefined","inverseColors","opacityFrom","opacityTo","stops","colorStops","dataLabels","title","text","align","margin","offsetY","style","fontSize","yaxis","minWidth","Seeds","todos","todoList","length","map","todo","index","option","parameters","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AChart from \"react-apexcharts\";\nconst op = (id, name, date) =>{\n    let colors = ['#f8e9a1', '#f76c6c', '#a8d0e6', '#374785', '#24305e', '#339933', '#375e97', '#fb6542', '#ffbb00', '#f0f0f0'\n    ,'#004c97', '#ff9e15', '#a5cd50', '#2dbecd', '#e61e50', '#fbae00', '#da5353', '#693f7b', '#39589a',\t'#338984'];\n    let text_id = 'chart-'.concat(id);\n    return(    \n        {\n            colors: [colors[id]],\n            chart: {\n            id:text_id,\n            type: 'area',\n            group: 'social',\n            stacked: false,\n            height: '100%',\n            width:\"100%\",\n            animations: {\n                enabled: true,\n                easing: 'easeinout',\n                speed: 800,\n                animateGradually: {\n                    enabled: true,\n                    delay: 150\n                },\n                dynamicAnimation: {\n                    enabled: true,\n                    speed: 350\n                },\n                initialAnimation: {\n                    enabled: true\n                }\n            },\n            zoom: {\n                type: 'x',\n                enabled: true,\n                autoScaleYaxis: true\n            },\n            toolbar: {\n                autoSelected: 'zoom'\n            },\n        },\n        markers: {\n            size: 0,\n        },\n        xaxis: {\n            categories: date,\n            type: \"datetime\",\n            labels: {\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: 'HH:mm'\n                }\n            }\n        },\n        fill: {\n            colors: [colors[id]],\n            opacity: 0.9,\n            type: 'solid',\n            gradient: {\n                shade: 'dark',\n                type: \"horizontal\",\n                shadeIntensity: 0.5,\n                gradientToColors: undefined,\n                inverseColors: true,\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [0, 50, 100],\n                colorStops: []\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        title: {\n            text: name,\n            align: \"center\",\n            margin: 20,\n            offsetY: 20,\n            style: {\n                fontSize: \"25px\"\n            }\n        },\n        yaxis: {\n            labels: {\n                minWidth: 40\n            }\n        }}\n        )\n};\n\nconst Seeds= ({todos, date}) =>{\n    const todoList = todos.length ? (\n        todos.map( (todo, index) => {\n            let option = index;\n            let name= todo.name;\n            let parameters = op(option, name, date);\n            console.log(parameters);\n            return(\n                <div className=\"col s6\" key={index}>\n                    <div className=\"card\">\n                        <AChart\n                        options={parameters}\n                        series={[todo]}/>\n                    </div>\n                </div>\n            );\n        }\n        )\n    ) : (\n        <p className=\"center\">Loading</p>\n    );\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                {todoList}\n            </div>\n        </div>\n    );\n}\nexport default Seeds;"]},"metadata":{},"sourceType":"module"}