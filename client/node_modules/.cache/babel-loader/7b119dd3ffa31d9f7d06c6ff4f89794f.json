{"ast":null,"code":"var _jsxFileName = \"/home/arismendyl/Documents/WWTP page/wwtp/client/src/components/Charts/chart.js\";\nimport React, { Component } from \"react\";\nimport Achart from \"react-apexcharts\";\nimport { connect } from 'react-redux';\nimport { postDate } from '../../actions/postDate';\nimport { postLines } from '../../actions/postLines';\nimport { createData } from \"../../actions/postActions\";\nimport { postColumns } from \"../../actions/postColumns\";\n\nclass Chart extends Component {\n  callApi() {\n    fetch('http://localhost:9000/API/read/').then(res => res.text()).then(res => {\n      this.props.createData(JSON.parse(res));\n    });\n  }\n\n  columns() {\n    fetch('http://localhost:9000/API/read/columns').then(res => res.text()).then(res => {\n      this.props.postColumns(JSON.parse(res));\n    });\n  }\n\n  segment(col) {\n    let c = col;\n    const co = c.map(x => {\n      return x.column_name;\n    });\n    return co;\n  }\n\n  componentDidMount() {\n    this.callApi();\n    this.columns();\n    var column = this.segment(this.props.col);\n    var data = this.props.data;\n    const date = data.map(x => {\n      return x.Date;\n    });\n    column.splice(column.indexOf('Date'), 1);\n    var s = column.map(x => {\n      var prel = data.map(z => {\n        return z[x];\n      });\n      return {\n        name: x,\n        data: prel\n      };\n    });\n    let a = s[0];\n    console.log(a);\n    this.props.postLines(a);\n    const categories = [\"1/12/2017\", \"2/12/2017\", \"3/12/2017\", \"4/12/2017\", \"5/12/2017\", \"6/12/2017\", \"7/12/2017\", \"8/12/2017\", \"9/12/2017\", \"10/12/2017\", \"11/12/2017\", \"12/12/2017\", \"13/12/2017\", \"14/12/2017\", \"15/12/2017\", \"16/12/2017\", \"17/12/2017\", \"18/12/2017\", \"19/12/2017\", \"20/12/2017\", \"21/12/2017\", \"22/12/2017\", \"23/12/2017\", \"24/12/2017\", \"25/12/2017\", \"26/12/2017\", \"27/12/2017\", \"28/12/2017\", \"29/12/2017\", \"30/12/2017\", \"31/12/2017\", \"1/1/2018\", \"02/01/2018\", \"03/01/2018\", \"04/01/2018\", \"05/01/2018\", \"06/01/2018\", \"07/01/2018\", \"08/01/2018\", \"09/01/2018\", \"10/01/2018\", \"11/01/2018\", \"12/01/2018\", \"13/01/2018\", \"14/01/2018\", \"15/01/2018\", \"16/01/2018\", \"17/01/2018\", \"18/01/2018\", \"19/01/2018\", \"20/01/2018\", \"21/1/2018\", \"22/1/2018\", \"23/1/2018\", \"24/1/2018\", \"25/1/2018\", \"26/1/2018\", \"27/1/2018\", \"28/1/2018\", \"29/1/2018\", \"30/1/2018\", \"31/1/2018\", \"01/02/2018\", \"02/02/2018\", \"03/02/2018\", \"04/02/2018\", \"05/02/2018\", \"06/02/2018\", \"07/02/2018\", \"08/02/2018\", \"09/02/2018\", \"10/02/2018\", \"11/02/2018\", \"12/02/2018\", \"13/02/2018\", \"14/2/2018\", \"15/2/2018\", \"16/2/2018\", \"17/2/2018\", \"18/2/2018\", \"19/2/2018\", \"20/2/2018\", \"21/2/2018\", \"22/2/2018\", \"23/2/2018\", \"24/2/2018\", \"25/2/2018\", \"26/02/2018\", \"27/02/2018\", \"28/02/2018\", \"01/03/2018\", \"02/03/2018\", \"03/03/2018\", \"04/03/2018\", \"05/03/2018\", \"06/03/2018\", \"07/03/2018\", \"08/03/2018\", \"09/03/2018\", \"10/03/2018\", \"11/03/2018\", \"12/03/2018\", \"13/03/2018\", \"14/03/2018\", \"15/03/2018\", \"16/03/2018\", \"17/3/2018\", \"18/3/2018\", \"19/3/2018\", \"20/3/2018\", \"21/3/2018\", \"22/3/2018\", \"23/3/2018\", \"24/3/2018\", \"25/3/2018\", \"26/3/2018\", \"27/3/2018\", \"28/3/2018\", \"29/03/2018\", \"30/03/2018\", \"31/03/2018\", \"01/04/2018\", \"02/04/2018\", \"03/04/2018\", \"04/04/2018\", \"05/04/2018\", \"06/04/2018\", \"07/04/2018\", \"08/04/2018\", \"09/04/2018\", \"10/4/2018\", \"11/4/2018\", \"12/4/2018\", \"13/4/2018\", \"14/4/2018\", \"15/4/2018\", \"16/4/2018\", \"17/4/2018\", \"18/4/2018\", \"19/4/2018\", \"20/4/2018\", \"21/4/2018\", \"22/04/2018\", \"23/04/2018\", \"24/04/2018\", \"25/04/2018\", \"26/04/2018\", \"27/04/2018\", \"28/04/2018\"];\n    const cod = [267, 328, 359, 269, 265, 296, 263, 277, 280, 314, 300, 307, 298, 299, 304, 280, 311, 244, 262, 307, 284, 264, 289, 264, 335, 338, 287, 259, 264, 284, 291, 295, 301, 325, 291, 304, 340, 362, 294, 246, 294, 301, 247, 248, 338, 259, 288, 267, 201, 378, 279, 283, 236, 331, 265, 267, 273, 301, 289, 246, 247, 249, 234, 267, 330, 291, 246, 259, 232, 274, 262, 250, 276, 292, 269, 261, 302, 306, 274, 290, 389, 294, 325, 272, 330, 272, 297, 290, 269, 337, 285, 276, 291, 364, 302, 309, 281, 346, 382, 314, 302, 320, 278, 275, 301, 344, 220, 286, 301, 273, 301, 288, 279, 312, 281, 282, 295, 328, 281, 283, 294, 268, 295, 280, 308, 330, 355, 293, 356, 323, 298, 290, 276, 306, 320, 314, 315, 362, 338, 290, 253, 312, 308, 340, 346, 337, 313, 288, 338];\n    const n = [83.91, 82.88, 83.59, 82.92, 83.4, 80.45, 78.72, 82.6, 75.93, 85.94, 81.86, 78.27, 76.49, 81.24, 80.82, 80.29, 78.48, 80.5, 79.07, 79.2, 79.37, 97.59, 76.9, 76.85, 77.02, 78.57, 79.11, 80.62, 80.18, 78.68, 81.29, 78.71, 75.24, 76.22, 78.69, 80.55, 78.82, 78.39, 77.73, 76.46, 80.27, 71.8, 69.38, 74.09, 71.65, 68.27, 69.9, 69.37, 69.81, 77.65, 74.83, 74.16, 70.18, 71.55, 70.57, 72.16, 68, 69.24, 70.34, 65.54, 64.09, 66.07, 62.89, 65.11, 66.26, 68.84, 63.42, 63.07, 60.15, 60.67, 66.34, 68, 67.3, 70.4, 67.67, 69.79, 66, 75.31, 73.45, 74.3, 72.46, 74.61, 76.45, 75, 76.52, 75.25, 67.6, 67.33, 75.3, 80.7, 77.72, 76.2, 75.81, 82.56, 77.03, 77.79, 75.1, 75.92, 77.27, 79.31, 73.4, 73.24, 74.57, 78.09, 79.76, 84.11, 83.22, 82.18, 79.33, 81.95, 78.19, 89.26, 81.07, 78, 78.09, 86.08, 81.98, 87.62, 83.13, 87.76, 88.56, 82.68, 76.97, 79.75, 75.35, 79.12, 79.68, 79.96, 78.88, 81.58, 78.96, 78.34, 73.25, 79.88, 92.13, 87.99, 82.42, 84.6, 81, 78.07, 75.7, 78.89, 82.46, 82.15, 86, 83.9, 82.8, 78.3, 78.8];\n  }\n\n  render() {\n    return React.createElement(Achart, {\n      options: this.props.options,\n      series: this.props.series,\n      type: \"area\",\n      height: \"450\",\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    col: state.col,\n    series: state.series,\n    options: state.options\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postDate: options => {\n      dispatch(postDate(options));\n    },\n    postLines: series => {\n      dispatch(postLines(series));\n    },\n    createData: data => {\n      dispatch(createData(data));\n    },\n    postColumns: col => {\n      dispatch(postColumns(col));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);","map":{"version":3,"sources":["/home/arismendyl/Documents/WWTP page/wwtp/client/src/components/Charts/chart.js"],"names":["React","Component","Achart","connect","postDate","postLines","createData","postColumns","Chart","callApi","fetch","then","res","text","props","JSON","parse","columns","segment","col","c","co","map","x","column_name","componentDidMount","column","data","date","Date","splice","indexOf","s","prel","z","name","a","console","log","categories","cod","n","render","options","series","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Achart from \"react-apexcharts\";\nimport { connect } from 'react-redux'\nimport { postDate } from '../../actions/postDate'\nimport { postLines } from '../../actions/postLines'\nimport { createData } from \"../../actions/postActions\"\nimport { postColumns } from \"../../actions/postColumns\"\n\nclass Chart extends Component {\n\n  callApi(){\n    fetch('http://localhost:9000/API/read/')\n    .then(res => res.text())\n    .then(res => {this.props.createData(JSON.parse(res))\n    })\n  }\n\n  columns(){\n    fetch('http://localhost:9000/API/read/columns')\n    .then(res => res.text())\n    .then(res => {this.props.postColumns(JSON.parse(res))\n    })\n  }\n\nsegment(col){\n  let c = col\n  const co = c.map(\n    (x)=>{\n      return x.column_name;\n    }\n  )\n  return co\n}\n\n\n  componentDidMount() {\n    this.callApi()\n    this.columns()\n    var column = this.segment(this.props.col);\n    var data = this.props.data;\n\n    const date = data.map(x => {\n      return x.Date\n    }\n    );\n    column.splice( column.indexOf('Date'), 1 );\n    var s = column.map( x =>{\n      var prel= data.map(\n        (z)=>{\n          return z[x]\n        }\n      )\n      return({name: x, data: prel})\n    })\n    let a = s[0];\n    console.log(a)\n    this.props.postLines(a)\n    const categories = [\n      \"1/12/2017\",\n      \"2/12/2017\",\n      \"3/12/2017\",\n      \"4/12/2017\",\n      \"5/12/2017\",\n      \"6/12/2017\",\n      \"7/12/2017\",\n      \"8/12/2017\",\n      \"9/12/2017\",\n      \"10/12/2017\",\n      \"11/12/2017\",\n      \"12/12/2017\",\n      \"13/12/2017\",\n      \"14/12/2017\",\n      \"15/12/2017\",\n      \"16/12/2017\",\n      \"17/12/2017\",\n      \"18/12/2017\",\n      \"19/12/2017\",\n      \"20/12/2017\",\n      \"21/12/2017\",\n      \"22/12/2017\",\n      \"23/12/2017\",\n      \"24/12/2017\",\n      \"25/12/2017\",\n      \"26/12/2017\",\n      \"27/12/2017\",\n      \"28/12/2017\",\n      \"29/12/2017\",\n      \"30/12/2017\",\n      \"31/12/2017\",\n      \"1/1/2018\",\n      \"02/01/2018\",\n      \"03/01/2018\",\n      \"04/01/2018\",\n      \"05/01/2018\",\n      \"06/01/2018\",\n      \"07/01/2018\",\n      \"08/01/2018\",\n      \"09/01/2018\",\n      \"10/01/2018\",\n      \"11/01/2018\",\n      \"12/01/2018\",\n      \"13/01/2018\",\n      \"14/01/2018\",\n      \"15/01/2018\",\n      \"16/01/2018\",\n      \"17/01/2018\",\n      \"18/01/2018\",\n      \"19/01/2018\",\n      \"20/01/2018\",\n      \"21/1/2018\",\n      \"22/1/2018\",\n      \"23/1/2018\",\n      \"24/1/2018\",\n      \"25/1/2018\",\n      \"26/1/2018\",\n      \"27/1/2018\",\n      \"28/1/2018\",\n      \"29/1/2018\",\n      \"30/1/2018\",\n      \"31/1/2018\",\n      \"01/02/2018\",\n      \"02/02/2018\",\n      \"03/02/2018\",\n      \"04/02/2018\",\n      \"05/02/2018\",\n      \"06/02/2018\",\n      \"07/02/2018\",\n      \"08/02/2018\",\n      \"09/02/2018\",\n      \"10/02/2018\",\n      \"11/02/2018\",\n      \"12/02/2018\",\n      \"13/02/2018\",\n      \"14/2/2018\",\n      \"15/2/2018\",\n      \"16/2/2018\",\n      \"17/2/2018\",\n      \"18/2/2018\",\n      \"19/2/2018\",\n      \"20/2/2018\",\n      \"21/2/2018\",\n      \"22/2/2018\",\n      \"23/2/2018\",\n      \"24/2/2018\",\n      \"25/2/2018\",\n      \"26/02/2018\",\n      \"27/02/2018\",\n      \"28/02/2018\",\n      \"01/03/2018\",\n      \"02/03/2018\",\n      \"03/03/2018\",\n      \"04/03/2018\",\n      \"05/03/2018\",\n      \"06/03/2018\",\n      \"07/03/2018\",\n      \"08/03/2018\",\n      \"09/03/2018\",\n      \"10/03/2018\",\n      \"11/03/2018\",\n      \"12/03/2018\",\n      \"13/03/2018\",\n      \"14/03/2018\",\n      \"15/03/2018\",\n      \"16/03/2018\",\n      \"17/3/2018\",\n      \"18/3/2018\",\n      \"19/3/2018\",\n      \"20/3/2018\",\n      \"21/3/2018\",\n      \"22/3/2018\",\n      \"23/3/2018\",\n      \"24/3/2018\",\n      \"25/3/2018\",\n      \"26/3/2018\",\n      \"27/3/2018\",\n      \"28/3/2018\",\n      \"29/03/2018\",\n      \"30/03/2018\",\n      \"31/03/2018\",\n      \"01/04/2018\",\n      \"02/04/2018\",\n      \"03/04/2018\",\n      \"04/04/2018\",\n      \"05/04/2018\",\n      \"06/04/2018\",\n      \"07/04/2018\",\n      \"08/04/2018\",\n      \"09/04/2018\",\n      \"10/4/2018\",\n      \"11/4/2018\",\n      \"12/4/2018\",\n      \"13/4/2018\",\n      \"14/4/2018\",\n      \"15/4/2018\",\n      \"16/4/2018\",\n      \"17/4/2018\",\n      \"18/4/2018\",\n      \"19/4/2018\",\n      \"20/4/2018\",\n      \"21/4/2018\",\n      \"22/04/2018\",\n      \"23/04/2018\",\n      \"24/04/2018\",\n      \"25/04/2018\",\n      \"26/04/2018\",\n      \"27/04/2018\",\n      \"28/04/2018\"\n    ];\n    \n\n\n    const cod = [\n      267,\n      328,\n      359,\n      269,\n      265,\n      296,\n      263,\n      277,\n      280,\n      314,\n      300,\n      307,\n      298,\n      299,\n      304,\n      280,\n      311,\n      244,\n      262,\n      307,\n      284,\n      264,\n      289,\n      264,\n      335,\n      338,\n      287,\n      259,\n      264,\n      284,\n      291,\n      295,\n      301,\n      325,\n      291,\n      304,\n      340,\n      362,\n      294,\n      246,\n      294,\n      301,\n      247,\n      248,\n      338,\n      259,\n      288,\n      267,\n      201,\n      378,\n      279,\n      283,\n      236,\n      331,\n      265,\n      267,\n      273,\n      301,\n      289,\n      246,\n      247,\n      249,\n      234,\n      267,\n      330,\n      291,\n      246,\n      259,\n      232,\n      274,\n      262,\n      250,\n      276,\n      292,\n      269,\n      261,\n      302,\n      306,\n      274,\n      290,\n      389,\n      294,\n      325,\n      272,\n      330,\n      272,\n      297,\n      290,\n      269,\n      337,\n      285,\n      276,\n      291,\n      364,\n      302,\n      309,\n      281,\n      346,\n      382,\n      314,\n      302,\n      320,\n      278,\n      275,\n      301,\n      344,\n      220,\n      286,\n      301,\n      273,\n      301,\n      288,\n      279,\n      312,\n      281,\n      282,\n      295,\n      328,\n      281,\n      283,\n      294,\n      268,\n      295,\n      280,\n      308,\n      330,\n      355,\n      293,\n      356,\n      323,\n      298,\n      290,\n      276,\n      306,\n      320,\n      314,\n      315,\n      362,\n      338,\n      290,\n      253,\n      312,\n      308,\n      340,\n      346,\n      337,\n      313,\n      288,\n      338\n    ];\n\n    const n = [\n      83.91,\n      82.88,\n      83.59,\n      82.92,\n      83.4,\n      80.45,\n      78.72,\n      82.6,\n      75.93,\n      85.94,\n      81.86,\n      78.27,\n      76.49,\n      81.24,\n      80.82,\n      80.29,\n      78.48,\n      80.5,\n      79.07,\n      79.2,\n      79.37,\n      97.59,\n      76.9,\n      76.85,\n      77.02,\n      78.57,\n      79.11,\n      80.62,\n      80.18,\n      78.68,\n      81.29,\n      78.71,\n      75.24,\n      76.22,\n      78.69,\n      80.55,\n      78.82,\n      78.39,\n      77.73,\n      76.46,\n      80.27,\n      71.8,\n      69.38,\n      74.09,\n      71.65,\n      68.27,\n      69.9,\n      69.37,\n      69.81,\n      77.65,\n      74.83,\n      74.16,\n      70.18,\n      71.55,\n      70.57,\n      72.16,\n      68,\n      69.24,\n      70.34,\n      65.54,\n      64.09,\n      66.07,\n      62.89,\n      65.11,\n      66.26,\n      68.84,\n      63.42,\n      63.07,\n      60.15,\n      60.67,\n      66.34,\n      68,\n      67.3,\n      70.4,\n      67.67,\n      69.79,\n      66,\n      75.31,\n      73.45,\n      74.3,\n      72.46,\n      74.61,\n      76.45,\n      75,\n      76.52,\n      75.25,\n      67.6,\n      67.33,\n      75.3,\n      80.7,\n      77.72,\n      76.2,\n      75.81,\n      82.56,\n      77.03,\n      77.79,\n      75.1,\n      75.92,\n      77.27,\n      79.31,\n      73.4,\n      73.24,\n      74.57,\n      78.09,\n      79.76,\n      84.11,\n      83.22,\n      82.18,\n      79.33,\n      81.95,\n      78.19,\n      89.26,\n      81.07,\n      78,\n      78.09,\n      86.08,\n      81.98,\n      87.62,\n      83.13,\n      87.76,\n      88.56,\n      82.68,\n      76.97,\n      79.75,\n      75.35,\n      79.12,\n      79.68,\n      79.96,\n      78.88,\n      81.58,\n      78.96,\n      78.34,\n      73.25,\n      79.88,\n      92.13,\n      87.99,\n      82.42,\n      84.6,\n      81,\n      78.07,\n      75.7,\n      78.89,\n      82.46,\n      82.15,\n      86,\n      83.9,\n      82.8,\n      78.3,\n      78.8\n    ];\n\n\n  }\n\n  render() {\n    return (\n      <Achart\n        options={this.props.options}\n        series={this.props.series}\n        type=\"area\"\n        height=\"450\"\n        width=\"100%\"\n      />\n    );\n  }\n}\n\nconst mapStateToProps= (state) => {\n  return{\n      data: state.data,\n      col: state.col,\n      series: state.series,\n      options: state.options\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n      postDate: (options) => {dispatch(postDate(options))},\n      postLines: (series) => {dispatch(postLines(series))},\n      createData: (data) => {dispatch(createData(data))},\n      postColumns: (col) => {dispatch(postColumns(col))}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\n"]},"metadata":{},"sourceType":"module"}