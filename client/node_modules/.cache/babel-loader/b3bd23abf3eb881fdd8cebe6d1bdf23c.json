{"ast":null,"code":"import _objectSpread from \"/home/arismendyl/Documents/WWTP page/wwtp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst initState = {\n  data: [\"hola\"],\n  col: [],\n  series: [{\n    name: \"\",\n    data: []\n  }],\n  options: {\n    chart: {\n      height: 450,\n      width: \"100%\",\n      type: \"bar\",\n      background: \"#FFFFFF\",\n      foreColor: \"#333\"\n    },\n    xaxis: {\n      categories: [],\n      type: \"\"\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.5,\n        opacityTo: 0,\n        stops: [0, 90, 100]\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    title: {\n      text: \"Equalizer\",\n      align: \"center\",\n      margin: 20,\n      offsetY: 20,\n      style: {\n        fontSize: \"25px\"\n      }\n    }\n  }\n};\n\nconst rootReducer = (state = initState, action) => {\n  if (action.type === 'CREATE_DATA') {\n    return _objectSpread({}, state, {\n      data: action.data\n    });\n  }\n\n  if (action.type === 'POST_COLUMNS') {\n    return _objectSpread({}, state, {\n      col: action.col\n    });\n  }\n\n  if (action.type === 'POST_DATE') {\n    return _objectSpread({}, state, {\n      options: _objectSpread({}, state.options, {\n        xaxis: _objectSpread({}, state.options.xaxis, {\n          categories: action.options\n        })\n      })\n    });\n  }\n\n  if (action.type === 'POST_LINES') {\n    return _objectSpread({}, state, {\n      series: action.series\n    });\n  }\n\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/arismendyl/Documents/WWTP page/wwtp/client/src/reducers/rootReducer.js"],"names":["initState","data","col","series","name","options","chart","height","width","type","background","foreColor","xaxis","categories","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","dataLabels","enabled","title","text","align","margin","offsetY","style","fontSize","rootReducer","state","action"],"mappings":";AAAA,MAAMA,SAAS,GAAE;AACbC,EAAAA,IAAI,EAAE,CAAC,MAAD,CADO;AAEbC,EAAAA,GAAG,EAAE,EAFQ;AAGbC,EAAAA,MAAM,EAAE,CACJ;AACAC,IAAAA,IAAI,EAAE,EADN;AAEAH,IAAAA,IAAI,EAAE;AAFN,GADI,CAHK;AASbI,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE;AACPC,MAAAA,MAAM,EAAE,GADD;AAEPC,MAAAA,KAAK,EAAE,MAFA;AAGPC,MAAAA,IAAI,EAAE,KAHC;AAIPC,MAAAA,UAAU,EAAE,SAJL;AAKPC,MAAAA,SAAS,EAAE;AALJ,KADF;AAQLC,IAAAA,KAAK,EAAE;AACPC,MAAAA,UAAU,EAAE,EADL;AAEPJ,MAAAA,IAAI,EAAE;AAFC,KARF;AAYLK,IAAAA,IAAI,EAAE;AACNL,MAAAA,IAAI,EAAE,UADA;AAENM,MAAAA,QAAQ,EAAE;AACNC,QAAAA,cAAc,EAAE,CADV;AAENC,QAAAA,aAAa,EAAE,KAFT;AAGNC,QAAAA,WAAW,EAAE,GAHP;AAINC,QAAAA,SAAS,EAAE,CAJL;AAKNC,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR;AALD;AAFJ,KAZD;AAsBLC,IAAAA,UAAU,EAAE;AACZC,MAAAA,OAAO,EAAE;AADG,KAtBP;AAyBLC,IAAAA,KAAK,EAAE;AACPC,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,KAAK,EAAE,QAFA;AAGPC,MAAAA,MAAM,EAAE,EAHD;AAIPC,MAAAA,OAAO,EAAE,EAJF;AAKPC,MAAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAE;AADP;AALA;AAzBF;AATI,CAAjB;;AA8CA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAC/B,SAAP,EAAkBgC,MAAlB,KAA4B;AAC5C,MAAIA,MAAM,CAACvB,IAAP,KAAgB,aAApB,EAAmC;AAC/B,6BACOsB,KADP;AAEI9B,MAAAA,IAAI,EAAE+B,MAAM,CAAC/B;AAFjB;AAIH;;AAED,MAAI+B,MAAM,CAACvB,IAAP,KAAgB,cAApB,EAAoC;AAChC,6BACOsB,KADP;AAEI7B,MAAAA,GAAG,EAAE8B,MAAM,CAAC9B;AAFhB;AAIH;;AAED,MAAI8B,MAAM,CAACvB,IAAP,KAAgB,WAApB,EAAiC;AAC7B,6BACOsB,KADP;AAEI1B,MAAAA,OAAO,oBACH0B,KAAK,CAAC1B,OADH;AAEPO,QAAAA,KAAK,oBAAMmB,KAAK,CAAC1B,OAAN,CAAcO,KAApB;AACLC,UAAAA,UAAU,EAAGmB,MAAM,CAAC3B;AADf;AAFE;AAFX;AAQH;;AAED,MAAI2B,MAAM,CAACvB,IAAP,KAAgB,YAApB,EAAkC;AAC9B,6BACOsB,KADP;AAEI5B,MAAAA,MAAM,EAAE6B,MAAM,CAAC7B;AAFnB;AAIH;;AAID,SAAO4B,KAAP;AACH,CApCD;;AAuCA,eAAeD,WAAf","sourcesContent":["const initState= {\n    data: [\"hola\"],\n    col: [],\n    series: [\n        {\n        name: \"\",\n        data: []\n        }\n    ],\n    options: {\n        chart: {\n        height: 450,\n        width: \"100%\",\n        type: \"bar\",\n        background: \"#FFFFFF\",\n        foreColor: \"#333\"\n        },\n        xaxis: {\n        categories: [],\n        type: \"\"\n        },\n        fill: {\n        type: \"gradient\",\n        gradient: {\n            shadeIntensity: 1,\n            inverseColors: false,\n            opacityFrom: 0.5,\n            opacityTo: 0,\n            stops: [0, 90, 100]\n        }\n        },\n        dataLabels: {\n        enabled: false\n        },\n        title: {\n        text: \"Equalizer\",\n        align: \"center\",\n        margin: 20,\n        offsetY: 20,\n        style: {\n            fontSize: \"25px\"\n        }\n        }\n    },\n}\n\nconst rootReducer = (state=initState, action) =>{\n    if (action.type === 'CREATE_DATA') {\n        return {\n            ...state,\n            data: action.data\n        }\n    }\n\n    if (action.type === 'POST_COLUMNS') {\n        return {\n            ...state,\n            col: action.col\n        }\n    }\n\n    if (action.type === 'POST_DATE') {\n        return {\n            ...state,\n            options:\n            {...state.options,\n            xaxis: {...state.options.xaxis,\n            categories : action.options}\n            }\n        }\n    }\n\n    if (action.type === 'POST_LINES') {\n        return {\n            ...state,\n            series: action.series\n        }\n    }\n\n\n\n    return state;\n}\n\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}